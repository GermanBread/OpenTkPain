[DIFFICULTY] lower = easier; scale 1-10

Personal notes
[*] The Transform class might be freaking out over the new UV values

Working on it (when these two are done my engine is ready for use, just not feature-complete):
[3] Non-blocking atlas regeneration
[8] Text (use Meshes ffs)

To be done
[2] Min/max size for objects (in pixels)
[5] Animation system
[2] Image cropping (in shaders)
[2] Make renderer modular [drawing would be something along the lines of: renderer.Draw(verts, indices, ...)]
[2] Add polygon class which allows you to create objects with N corners
[3] Make it easy to create .ufr archives
[3] Add support for multiple atlases (will be needed for text rendering?)
[6] Rework Audio: Split Music / Sound streams. FFT Sample should request blocks in size of x*2
    Volume can be set with Bass.SampleSetInfo();
[8] Add a class that does instanced rendering... Perhaps called "InstancedObject"?
    It should also check if all objects are of the same type... or it should draw the different types in a instanced render
[5] Add ability to save / load texture atlases
[6] Make multithreading easy
    Provide a class that can be used to launch code in a seperate thread
    Race conditions should be avoided!
[2] Move drawable objects list from BaseGame.cs to SceneManager.cs
[3] Drawing & Multipass: Instead of invalidating the list (mentioned above) when am element changes, remove/add that object/scene from the list.
[?] Integrate ImGUI.Net
[?] Migrate to OpenAL

Done
[3] Refactor Texture stuff
[5] Rewrite Transform.cs to feature less spaghetti
[3] Implement a file format for resources (perhaps .ufr?)
    These resource files should support containing more than one file, and even other resource files (dropped the nested resource thing)
[2] Convert to library
[3] Change LoadScene() to load the scenes indirectly. Instead it should be done by the main thread!
[5] Parenting (might need recursion)
[4] Textures (atlas)
[3] Rewrite the entire Shader class
[2] Multipass aka cursor detection
[8] Fix some issues SPECIFIC TO WINDOWS (Accessviolation in Init() method. Most likely caused during texture load)
    2021-04-09: This is caused by a bug in Shader.cs (probably)
    2021-04-28: New issue: Context.MakeCurrent() fails because the resource is in use (._.)
[3] Backport to older versions of OpenGL
[3] Scene position offset, rotation, scale
[2] Input helper (must also be able to determine the object clicked)
[1] Camera (must be able to convert between camera-coordinates, world-coordinates and cursor-coordinates)